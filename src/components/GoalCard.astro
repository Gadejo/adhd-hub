---
export interface Props {
  goal: import('../lib/models.js').Goal;
}

const { goal } = Astro.props;

const statusColors = {
  'active': 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300',
  'completed': 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300',
  'paused': 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300',
  'cancelled': 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300'
};

const isOverdue = new Date(goal.dueDate) < new Date() && goal.status !== 'completed';
const daysUntilDue = Math.ceil((new Date(goal.dueDate).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));
---

<div class="bg-white dark:bg-gray-800 rounded-lg shadow-md border border-gray-200 dark:border-gray-700 p-6 goal-card" data-goal-id={goal.id}>
  <div class="flex items-start justify-between mb-4">
    <div class="flex-1 min-w-0">
      <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-1">
        {goal.name}
      </h3>
      <p class="text-sm text-gray-600 dark:text-gray-400 mb-2">{goal.subject}</p>
    </div>
    
    <div class="flex items-center space-x-2 ml-4">
      <button 
        class="edit-goal-btn p-1 text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
        data-id={goal.id}
        aria-label="Edit goal"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
        </svg>
      </button>
      <button 
        class="delete-goal-btn p-1 text-gray-400 hover:text-red-600 dark:hover:text-red-400 transition-colors"
        data-id={goal.id}
        aria-label="Delete goal"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
        </svg>
      </button>
    </div>
  </div>
  
  <!-- Progress Bar -->
  <div class="mb-4">
    <div class="flex justify-between items-center mb-2">
      <span class="text-sm font-medium text-gray-700 dark:text-gray-300">Progress</span>
      <span class="text-sm font-semibold text-gray-900 dark:text-white">{goal.progressPct}%</span>
    </div>
    <div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2">
      <div 
        class={`h-2 rounded-full transition-all duration-300 ${
          goal.progressPct === 100 
            ? 'bg-green-600' 
            : goal.progressPct >= 75 
            ? 'bg-blue-600' 
            : goal.progressPct >= 50 
            ? 'bg-yellow-600' 
            : 'bg-red-600'
        }`}
        style={`width: ${goal.progressPct}%`}
      ></div>
    </div>
  </div>
  
  <!-- Status and Due Date -->
  <div class="flex flex-wrap gap-2 mb-4">
    <span class={`px-2 py-1 text-xs font-medium rounded-full ${statusColors[goal.status]}`}>
      {goal.status.replace('-', ' ')}
    </span>
    
    {isOverdue ? (
      <span class="px-2 py-1 text-xs font-medium rounded-full bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300">
        Overdue
      </span>
    ) : daysUntilDue <= 7 && daysUntilDue > 0 ? (
      <span class="px-2 py-1 text-xs font-medium rounded-full bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-300">
        Due soon
      </span>
    ) : null}
  </div>
  
  <!-- Due Date -->
  <div class="flex justify-between items-center text-sm">
    <span class="text-gray-600 dark:text-gray-400">
      Due: {new Date(goal.dueDate).toLocaleDateString()}
    </span>
    <span class="text-gray-500 dark:text-gray-400">
      {daysUntilDue > 0 ? `${daysUntilDue} days left` : daysUntilDue === 0 ? 'Due today' : `${Math.abs(daysUntilDue)} days overdue`}
    </span>
  </div>
  
  <!-- Quick Progress Actions -->
  {goal.status === 'active' && goal.progressPct < 100 && (
    <div class="mt-4 flex gap-2">
      <button 
        class="progress-btn flex-1 px-3 py-1 text-xs bg-blue-600 hover:bg-blue-700 text-white rounded transition-colors"
        data-id={goal.id}
        data-increment="10"
      >
        +10%
      </button>
      <button 
        class="progress-btn flex-1 px-3 py-1 text-xs bg-green-600 hover:bg-green-700 text-white rounded transition-colors"
        data-id={goal.id}
        data-increment="25"
      >
        +25%
      </button>
      {goal.progressPct <= 50 && (
        <button 
          class="progress-btn flex-1 px-3 py-1 text-xs bg-purple-600 hover:bg-purple-700 text-white rounded transition-colors"
          data-id={goal.id}
          data-increment="50"
        >
          +50%
        </button>
      )}
    </div>
  )}
</div>