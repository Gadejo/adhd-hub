---
import { 
  getStatusColor, 
  formatReviewDate, 
  getNextReviewText, 
  isDueToday,
  getReviewProgress 
} from '../lib/review.js';

export interface Props {
  resource: import('../lib/models.js').Resource;
  onEdit?: (id: string) => void;
  onDelete?: (id: string) => void;
  onReview?: (id: string) => void;
  onSnooze?: (id: string) => void;
}

const { resource } = Astro.props;

const priorityColors = {
  1: 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300',
  2: 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-300',
  3: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300',
  4: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300',
  5: 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-300'
};

const dueToday = isDueToday(resource);
const reviewDate = formatReviewDate(resource);
const nextReviewText = getNextReviewText(resource);
const reviewProgress = getReviewProgress(resource);
---

<div class={`bg-white dark:bg-gray-800 rounded-lg shadow-md border p-6 resource-card ${
  dueToday ? 'border-yellow-400 dark:border-yellow-500 ring-2 ring-yellow-200 dark:ring-yellow-800' : 'border-gray-200 dark:border-gray-700'
}`} data-resource-id={resource.id}>
  
  {dueToday && (
    <div class="mb-3 p-2 bg-yellow-100 dark:bg-yellow-900 rounded-lg">
      <p class="text-sm font-medium text-yellow-800 dark:text-yellow-200 flex items-center">
        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 14.5c-.77.833.192 2.5 1.732 2.5z"></path>
        </svg>
        Due for review today!
      </p>
    </div>
  )}
  
  <div class="flex items-start justify-between mb-3">
    <div class="flex-1 min-w-0">
      <h3 class="text-lg font-semibold text-gray-900 dark:text-white truncate mb-1">
        {resource.title}
        {resource.favorite && (
          <span class="ml-2 text-yellow-500">★</span>
        )}
      </h3>
      <p class="text-sm text-gray-600 dark:text-gray-400 mb-2">{resource.subject}</p>
      
      <!-- Review Progress Bar -->
      {resource.status !== 'new' && (
        <div class="mt-2">
          <div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-1.5">
            <div 
              class="bg-gradient-to-r from-blue-500 to-green-500 h-1.5 rounded-full transition-all duration-300"
              style={`width: ${reviewProgress}%`}
            ></div>
          </div>
          <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">
            {reviewProgress}% mastered
          </p>
        </div>
      )}
    </div>
    
    <div class="flex items-center space-x-2 ml-4">
      <button 
        class="edit-btn p-1 text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
        data-id={resource.id}
        aria-label="Edit resource"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
        </svg>
      </button>
      <button 
        class="delete-btn p-1 text-gray-400 hover:text-red-600 dark:hover:text-red-400 transition-colors"
        data-id={resource.id}
        aria-label="Delete resource"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
        </svg>
      </button>
    </div>
  </div>
  
  <div class="flex flex-wrap gap-2 mb-3">
    <span class={`px-2 py-1 text-xs font-medium rounded-full ${priorityColors[resource.priority]}`}>
      Priority {resource.priority}
    </span>
    <span class={`px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(resource.status)}`}>
      {resource.status.charAt(0).toUpperCase() + resource.status.slice(1)}
    </span>
    <span class="px-2 py-1 text-xs font-medium rounded-full bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-300">
      {resource.type}
    </span>
    
    {reviewDate && (
      <span class={`px-2 py-1 text-xs font-medium rounded-full ${
        dueToday ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300' : 'bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-300'
      }`}>
        {reviewDate}
      </span>
    )}
  </div>
  
  {resource.notes && (
    <p class="text-sm text-gray-600 dark:text-gray-400 mb-4 line-clamp-2">
      {resource.notes}
    </p>
  )}
  
  {nextReviewText && (
    <p class="text-xs text-gray-500 dark:text-gray-400 mb-3 italic">
      {nextReviewText}
    </p>
  )}
  
  <!-- Action Buttons -->
  <div class="flex flex-wrap gap-2 mb-4">
    {(resource.status === 'new' || resource.status === 'learning' || resource.status === 'reviewing') && (
      <button 
        class="review-btn px-3 py-1 bg-green-600 hover:bg-green-700 text-white text-sm font-medium rounded transition-colors flex items-center"
        data-id={resource.id}
      >
        <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
        </svg>
        Review ✓
      </button>
    )}
    
    {resource.nextReviewDate && resource.status !== 'done' && (
      <button 
        class="snooze-btn px-3 py-1 bg-orange-600 hover:bg-orange-700 text-white text-sm font-medium rounded transition-colors flex items-center"
        data-id={resource.id}
      >
        <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
        </svg>
        Snooze
      </button>
    )}
  </div>
  
  <div class="flex justify-between items-center">
    <span class="text-xs text-gray-500 dark:text-gray-400">
      Updated {new Date(resource.updatedAt).toLocaleDateString()}
    </span>
    <a 
      href={resource.url}
      target="_blank"
      rel="noopener noreferrer"
      class="inline-flex items-center px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white text-sm font-medium rounded transition-colors"
    >
      Open
      <svg class="w-3 h-3 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
      </svg>
    </a>
  </div>
</div>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>